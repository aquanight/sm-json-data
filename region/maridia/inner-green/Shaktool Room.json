{
  "$schema": "../../../schema/m3-room.schema.json",
  "id": 222,
  "name": "Shaktool Room",
  "area": "Maridia",
  "subarea": "Inner",
  "subsubarea": "Green",
  "playable": true,
  "roomAddress": "0x7D8C5",
  "roomEnvironments": [{"heated": false}],
  "nodes": [
    {
      "id": 1,
      "name": "Left Door",
      "nodeType": "door",
      "nodeSubType": "blue",
      "nodeAddress": "0x001a8c4",
      "doorOrientation": "left",
      "doorEnvironments": [{"physics": "air"}]
    },
    {
      "id": 2,
      "name": "Right Door",
      "nodeType": "door",
      "nodeSubType": "blue",
      "nodeAddress": "0x001a8d0",
      "doorOrientation": "right",
      "doorEnvironments": [{"physics": "air"}]
    }
  ],
  "obstacles": [
    {
      "id": "A",
      "name": "Power Bomb Blocks",
      "obstacleType": "inanimate"
    },
    {
      "id": "B",
      "name": "Sand Blocks",
      "obstacleType": "inanimate",
      "note": "Cleared by having the sand blocks be fully destroyed by Shaktool or snails"
    }
  ],
  "enemies": [
    {
      "id": "e1",
      "groupName": "Shaktool",
      "enemyName": "Shaktool",
      "quantity": 1,
      "homeNodes": [1]
    },
    {
      "id": "e2",
      "groupName": "Shaktool Room Yards",
      "enemyName": "Yard",
      "quantity": 2,
      "homeNodes": [2]
    }
  ],
  "links": [
    {
      "from": 1,
      "to": [
        {"id": 1},
        {"id": 2}
      ]
    },
    {
      "from": 2,
      "to": [
        {"id": 1},
        {"id": 2}
      ]
    }
  ],
  "strats": [
    {
      "link": [1, 1],
      "name": "Come In With Shaktool Done Digging",
      "entranceCondition": {
        "comeInNormally": {}
      },
      "requires": [
        "f_ShaktoolDoneDigging"
      ],
      "clearsObstacles": ["A", "B"]
    },
    {
      "link": [1, 1],
      "name": "Leave with Runway",
      "requires": [],
      "exitCondition": {
        "leaveWithRunway": {
          "length": 1,
          "openEnd": 1
        }
      }
    },
    {
      "link": [1, 1],
      "name": "Leave Shinecharged",
      "requires": [
        {"obstaclesCleared": ["A", "B"]},
        "canShinechargeMovement",
        "canWaterShineCharge",
        {"canShineCharge": {
          "usedTiles": 35,
          "openEnd": 2
        }}
      ],
      "exitCondition": {
        "leaveShinecharged": {
          "framesRemaining": 80
        }
      },
      "flashSuitChecked": true,
      "devNote": "This runway could be longer with precise timing or a stutter, but it seems unnecessary at this difficulty."
    },
    {
      "link": [1, 1],
      "name": "Leave Shinecharged, Gravity",
      "requires": [
        {"obstaclesCleared": ["A", "B"]},
        "canShinechargeMovement",
        "Gravity",
        {"canShineCharge": {
          "usedTiles": 42,
          "openEnd": 2
        }}
      ],
      "exitCondition": {
        "leaveShinecharged": {
          "framesRemaining": 100
        }
      },
      "flashSuitChecked": true,
      "devNote": "FIXME: By falling off the runway with precise movement, 135 frames are possible."
    },
    {
      "link": [1, 1],
      "name": "Crystal Flash",
      "requires": [
        "h_canCrystalFlash"
      ],
      "flashSuitChecked": true
    },
    {
      "link": [1, 1],
      "name": "G-Mode Setup - Get Hit By Shaktool",
      "notable": false,
      "requires": [],
      "exitCondition": {
        "leaveWithGModeSetup": {}
      },
      "flashSuitChecked": true
    },
    {
      "link": [1, 1],
      "name": "G-Mode Regain Mobility",
      "requires": [
        {"enemyDamage": {
          "enemy": "Shaktool",
          "type": "contact",
          "hits": 1
        }},
        {"or": [
          "canBePatient",
          {"and": [
            "canRiskPermanentLossOfAccess",
            {"not": "f_ShaktoolDoneDigging"}
          ]}
        ]}
      ],
      "gModeRegainMobility": {},
      "flashSuitChecked": true,
      "note": "This takes 1 min 40 sec if Shaktool is done digging."
    },
    {
      "link": [1, 2],
      "name": "Base",
      "requires": [
        {"or": [
          {"obstaclesCleared": ["A", "B"]},
          "h_canUsePowerBombs"
        ]}
      ],
      "clearsObstacles": ["A", "B"],
      "setsFlags": ["f_ShaktoolDoneDigging"]
    },
    {
      "link": [1, 2],
      "name": "G-Mode Morph Power Bomb",
      "entranceCondition": {
        "comeInWithGMode": {
          "mode": "any",
          "morphed": true
        }
      },
      "requires": [
        "h_canArtificialMorphPowerBomb"
      ],
      "clearsObstacles": ["A", "B"],
      "setsFlags": ["f_ShaktoolDoneDigging"],
      "flashSuitChecked": true
    },
    {
      "link": [2, 1],
      "name": "Base",
      "requires": [
        {"obstaclesCleared": ["A", "B"]}
      ]
    },
    {
      "link": [2, 1],
      "name": "Shaktool Room Reverse",
      "notable": true,
      "requires": [
        "h_canUsePowerBombs"
      ],
      "clearsObstacles": ["A", "B"],
      "setsFlags": ["f_ShaktoolDoneDigging"],
      "note": "Let the Snails (Yards) dig through the sand and follow them. They will not dig while off screen or while Samus is facing them, even while morphed."
    },
    {
      "link": [2, 1],
      "name": "G-Mode Morph Reverse Shaktool",
      "notable": true,
      "entranceCondition": {
        "comeInWithGMode": {
          "mode": "any",
          "morphed": true
        }
      },
      "requires": [
        {"or": [
          {"and": [
            "Gravity",
            "h_canArtificialMorphIBJ"
          ]},
          "h_canArtificialMorphSpringBall"
        ]},
        "h_canArtificialMorphPowerBomb"
      ],
      "clearsObstacles": ["A", "B"],
      "setsFlags": ["f_ShaktoolDoneDigging"],
      "flashSuitChecked": true,
      "note": [
        "The Snails will dig through the sand without showing any visual difference. Each block they pass through gets closer to overloading PLMs.",
        "In order to PB the left wall before PLMs are overloaded, it is necessary to only allow one snail to dig, either by bombing one or by facing one to prevent movement until it is off screen.",
        "If using mobile g-mode, it is easiest to get past the bottom one and prevent it from digging. If using immobile g-mode, it is easiest to have whichever one hits Samus go off screen.",
        "In the morph tunnel, it is important to place the PB as far right as possible, while still hitting the PB blocks, otherwise the Snails will have overloaded the PLMs and the blocks won't break.",
        "The green stone changes one tile earlier than the PB wall, and can be a good visual cue to place the PB.",
        "After using the PB, exit the sand, leave G-Mode, and wait for Shaktool. Note that the Snails will not dig while off screen or while Samus is facing them, even while she is morphed."
      ]
    },
    {
      "link": [2, 1],
      "name": "Grapple Teleport (Vanilla)",
      "entranceCondition": {
        "comeInWithGrappleTeleport": {
          "blockPositions": [[5, 3], [7, 2]]
        }
      },
      "requires": [
        "h_ShaktoolVanillaFlag"
      ],
      "devNote": [
        "In the vanilla game, grapple teleporting here does not set the flag 'f_ShaktoolDoneDigging', as Samus does not spend a frame on the right side of the room."
      ]
    },
    {
      "link": [2, 1],
      "name": "Grapple Teleport (Symmetric)",
      "entranceCondition": {
        "comeInWithGrappleTeleport": {
          "blockPositions": [[5, 3], [7, 2]]
        }
      },
      "requires": [
        "h_ShaktoolSymmetricFlag"
      ],
      "setsFlags": ["f_ShaktoolDoneDigging"]
    },
    {
      "link": [2, 1],
      "name": "Grapple Teleport Door Lock Skip (Vanilla)",
      "entranceCondition": {
        "comeInWithGrappleTeleport": {
          "blockPositions": [[3, 12], [3, 13]]
        }
      },
      "requires": [
        "h_ShaktoolVanillaFlag"
      ],
      "bypassesDoorShell": true
    },
    {
      "link": [2, 1],
      "name": "Grapple Teleport Door Lock Skip (Symmetric)",
      "entranceCondition": {
        "comeInWithGrappleTeleport": {
          "blockPositions": [[3, 12], [3, 13]]
        }
      },
      "requires": [
        "h_ShaktoolSymmetricFlag"
      ],
      "bypassesDoorShell": true,
      "setsFlags": ["f_ShaktoolDoneDigging"]
    },
    {
      "link": [2, 1],
      "name": "Carry Grapple Teleport (Top Position, Vanilla)",
      "entranceCondition": {
        "comeInWithGrappleTeleport": {
          "blockPositions": [[3, 12]]
        }
      },
      "requires": [
        "h_ShaktoolVanillaFlag"
      ],
      "bypassesDoorShell": true,
      "exitCondition": {
        "leaveWithGrappleTeleport": {
          "blockPositions": [[3, 12]]
        }
      }
    },
    {
      "link": [2, 1],
      "name": "Carry Grapple Teleport (Top Position, Symmetric)",
      "entranceCondition": {
        "comeInWithGrappleTeleport": {
          "blockPositions": [[3, 12]]
        }
      },
      "requires": [
        "h_ShaktoolSymmetricFlag"
      ],
      "bypassesDoorShell": true,
      "exitCondition": {
        "leaveWithGrappleTeleport": {
          "blockPositions": [[3, 12]]
        }
      },
      "setsFlags": ["f_ShaktoolDoneDigging"]
    },
    {
      "link": [2, 1],
      "name": "Carry Grapple Teleport (Bottom Position, Vanilla)",
      "entranceCondition": {
        "comeInWithGrappleTeleport": {
          "blockPositions": [[3, 13]]
        }
      },
      "requires": [
        "h_ShaktoolVanillaFlag"
      ],
      "bypassesDoorShell": true,
      "exitCondition": {
        "leaveWithGrappleTeleport": {
          "blockPositions": [[3, 13]]
        }
      }
    },
    {
      "link": [2, 1],
      "name": "Carry Grapple Teleport (Bottom Position, Symmetric)",
      "entranceCondition": {
        "comeInWithGrappleTeleport": {
          "blockPositions": [[3, 13]]
        }
      },
      "requires": [
        "h_ShaktoolSymmetricFlag"
      ],
      "bypassesDoorShell": true,
      "exitCondition": {
        "leaveWithGrappleTeleport": {
          "blockPositions": [[3, 13]]
        }
      },
      "setsFlags": ["f_ShaktoolDoneDigging"]
    },
    {
      "link": [2, 2],
      "name": "Come In With Shaktool Done Digging",
      "entranceCondition": {
        "comeInNormally": {}
      },
      "requires": [
        "f_ShaktoolDoneDigging"
      ],
      "clearsObstacles": ["A", "B"]
    },
    {
      "link": [2, 2],
      "name": "Shaktool Room Bounce the Snails Around the Room",
      "notable": true,
      "requires": [
        "canDodgeWhileShooting",
        "canTrickyJump",
        {"or": [
          "canTrickyDodgeEnemies",
          {"and": [
            "Morph",
            {"enemyDamage": {
              "enemy": "Yard",
              "type": "contact",
              "hits": 1
            }},
            {"or": [
              "Gravity",
              {"enemyDamage": {
                "enemy": "Yard",
                "type": "contact",
                "hits": 1
              }}
            ]}
          ]}
        ]}
      ],
      "clearsObstacles": ["B"],
      "note": [
        "Bounce the snails around the room in order to destroy the sand blocks, opening up the runway.",
        "A snail can be made to bounce in 3 ways: shooting it off a wall or ceiling, kicking it on the ground, or touching it while it is already bouncing.",
        "To kick a snail, it is necessary to gain some run speed by dashing for at least one frame while in air physics.",
        "A snail can be kicked from any direction when in its initial (not angered) state.",
        "After being angered, a snail can only safely be kicked from a certain side: from behind if on the ground, or head-on if are on the ceiling (and not at all while on a wall).",
        "If Morph is unavailable, be careful not to let the snails go off-camera.",
        "If a snail is on the ground and still on camera, it can be forced to move toward Samus again by shooting it;",
        "let it wrap around the right side of the room onto the ceiling, where it can be shot to cause it to fall and continue destroying sand blocks."
      ]
    },
    {
      "link": [2, 2],
      "name": "Leave with Runway",
      "requires": [],
      "exitCondition": {
        "leaveWithRunway": {
          "length": 1,
          "openEnd": 1
        }
      }
    },
    {
      "link": [2, 2],
      "name": "Leave Shinecharged",
      "requires": [
        {"obstaclesCleared": ["B"]},
        "canShinechargeMovement",
        "canWaterShineCharge",
        {"canShineCharge": {
          "usedTiles": 35,
          "openEnd": 2
        }}
      ],
      "exitCondition": {
        "leaveShinecharged": {
          "framesRemaining": 80
        }
      },
      "flashSuitChecked": true,
      "devNote": "This runway could be longer with precise timing or a stutter, but it seems unnecessary at this difficulty."
    },
    {
      "link": [2, 2],
      "name": "Leave Shinecharged, Gravity",
      "requires": [
        {"obstaclesCleared": ["B"]},
        "canShinechargeMovement",
        "Gravity",
        {"canShineCharge": {
          "usedTiles": 42,
          "openEnd": 2
        }}
      ],
      "exitCondition": {
        "leaveShinecharged": {
          "framesRemaining": 100
        }
      },
      "flashSuitChecked": true,
      "devNote": "FIXME: By falling off the runway with precise movement, 135 frames are possible."
    },
    {
      "link": [2, 2],
      "name": "Crystal Flash",
      "requires": [
        "h_canCrystalFlash"
      ],
      "flashSuitChecked": true
    },
    {
      "link": [2, 2],
      "name": "G-Mode Setup - Get Hit By Shaktool",
      "notable": false,
      "requires": [
        {"obstaclesCleared": ["A", "B"]}
      ],
      "exitCondition": {
        "leaveWithGModeSetup": {}
      },
      "flashSuitChecked": true
    },
    {
      "link": [2, 2],
      "name": "G-Mode Setup - Get Hit By Yard (Snail)",
      "notable": false,
      "requires": [
        "h_ShaktoolCameraFix"
      ],
      "exitCondition": {
        "leaveWithGModeSetup": {}
      },
      "flashSuitChecked": true,
      "note": "Shoot a Snail to make it chase Samus."
    },
    {
      "link": [2, 2],
      "name": "G-Mode Regain Mobility",
      "requires": [
        {"or": [
          {"and": [
            {"enemyDamage": {
              "enemy": "Shaktool",
              "type": "contact",
              "hits": 1
            }},
            "f_ShaktoolDoneDigging"
          ]},
          {"and": [
            {"enemyDamage": {
              "enemy": "Yard",
              "type": "contact",
              "hits": 1
            }},
            "h_ShaktoolCameraFix",
            {"or": [
              {"ammo": {"type": "Super", "count": 1}},
              {"and": [
                "canSpecialBeamAttack",
                {"ammo": {"type": "PowerBomb", "count": 1}}
              ]}
            ]}
          ]}
        ]}
      ],
      "gModeRegainMobility": {},
      "flashSuitChecked": true,
      "note": "Wait for Shaktool. If Shaktool's camera is fixed it is possible without Shaktool, by using a Snail (Yard): a Super or any SBA can trigger a Yard to attack."
    },
    {
      "link": [2, 2],
      "name": "Vanilla",
      "requires": [
        "h_ShaktoolVanillaFlag"
      ],
      "exitCondition": {
        "leaveNormally": {}
      },
      "setsFlags": ["f_ShaktoolDoneDigging"],
      "note": [
        "In the vanilla game, if the flag is not already set, entering from the right door immediately sets the flag, though the room must be reset for it to take effect.",
        "Resetting the room also fixes the camera, which gets broken in this state."
      ]
    }
  ]
}
